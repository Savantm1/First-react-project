{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Messages/MessageBlock/Message/Message.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Messages/Dialogs/Dialogs.module.css","components/Messages/Dialogs/Dialog/Dialog.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Messages/MessageBlock/MessageBlock.module.css","components/Profile/Profile.module.css","components/Messages/Messages.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Messages/Dialogs/Dialog/Dialog.jsx","components/Messages/Dialogs/Dialogs.jsx","components/Messages/MessageBlock/Message/Message.jsx","components/Messages/MessageBlock/MessageBlock.jsx","components/Messages/Messages.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","header","img","src","alt","Navbar","nav","list","item","link","activeClassName","active","to","Post","props","item__avatar","block_message","name","message","like","likes","MyPosts","PostsElements","postsData","map","element","posts","new","ProfileInfo","profile","avatar","desc","Profile","Profile_block","Dialog","id","Dialogs","namesElement","namesData","block","title","Message","avatar_block","text","MessageBlock","messagesElement","messagesData","message_block","Messages","App","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.60533602.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2FKY5\",\"list\":\"Navbar_list__3FOFW\",\"item\":\"Navbar_item__2YFQj\",\"link\":\"Navbar_link__1TiNo\",\"active\":\"Navbar_active__3R4Wa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3Vvxz\",\"item__avatar\":\"Post_item__avatar__35_uz\",\"block_message\":\"Post_block_message__3Z5TX\",\"name\":\"Post_name__3q082\",\"like\":\"Post_like__3y84E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__yWQMO\",\"avatar\":\"Message_avatar__2_SyW\",\"name\":\"Message_name__10-Ek\",\"text\":\"Message_text__19ALA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__3BqyT\",\"img\":\"ProfileInfo_img__1XOSd\",\"avatar\":\"ProfileInfo_avatar__3seWO\",\"desc\":\"ProfileInfo_desc__1d8md\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Dialogs_block__zeye6\",\"title\":\"Dialogs_title__3g8bx\",\"list\":\"Dialogs_list__1etl6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Dialog_item__2xcEd\",\"link\":\"Dialog_link__31gSS\",\"active\":\"Dialog_active__2fL5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3H77S\",\"img\":\"Header_img__3iwKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2o836\",\"new\":\"MyPosts_new__yCE5q\",\"item\":\"MyPosts_item__2_Dbg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_block\":\"MessageBlock_message_block__3xz0Z\",\"title\":\"MessageBlock_title__1-rlj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile_block\":\"Profile_Profile_block__2sYUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Messages_block__1Sa6I\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\n\r\n\r\nlet Header = () => {\r\n return (\r\n  <header className={styles.header}>\r\n    <img className={styles.img} src=\"https://placeit-assets1.s3-accelerate.amazonaws.com/custom-pages/technology-logo-maker-lp/online-logo-design-template-for-an-eco-tech-company-2176l-206-el-1024x1024.png\" alt=\"logo\"></img>\r\n  </header>\r\n )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from \"./Navbar.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <ul className={styles.list}>\r\n        <li className={styles.item}>\r\n          <NavLink className={styles.link} activeClassName={styles.active} to=\"/profile\"> Profile </NavLink>\r\n        </li>\r\n        <li className={styles.item}>\r\n          <NavLink className={styles.link} activeClassName={styles.active} to=\"/messages\"> Messages </NavLink>\r\n        </li>\r\n        <li className={styles.item}>\r\n          <NavLink className={styles.link} activeClassName={styles.active} to=\"/news\"> News </NavLink>\r\n        </li>\r\n        <li className={styles.item}> \r\n          <NavLink className={styles.link} activeClassName={styles.active} to=\"/music\"> Music </NavLink>\r\n        </li>\r\n        <li className={styles.item}>\r\n          <NavLink className={styles.link} activeClassName={styles.active} to=\"/settings\"> Settings </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from \"./Post.module.css\";\r\n\r\nlet Post = (props) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <img className={styles.item__avatar} src=\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\" alt=\"small_avatar\" />\r\n      <div className={styles.block_message}>\r\n        <span className={styles.name}>{props.name}</span>\r\n        <p className={styles.message}>{props.message} </p>\r\n        <span className={styles.like}>{props.likes}</span>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post'\r\n\r\nlet MyPosts = (props) => {\r\n\r\n\r\n  let PostsElements = props.postsData.map(element => < Post name={element.name} message={element.message} likes={element.likes} />);\r\n  \r\n  return (\r\n    <div className={styles.posts}>\r\n      <div >\r\n        <p className={styles.new}>new posts</p>\r\n       \r\n        { PostsElements };\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = (props) => {\r\n return (\r\n  <div className={styles.profile}>\r\n   <img className={styles.img} src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\" alt=\"background\"></img>\r\n   <img className={styles.avatar} src=\"https://greendestinations.org/wp-content/uploads/2019/05/avatar-exemple.jpg\" alt=\"avatar\"></img>\r\n   <p className={styles.desc}>descriptions</p>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from \"./Profile.module.css\";\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\n  \r\n\r\nlet Profile = (props) => {\r\n\r\n\r\n return (\r\n   <div className={styles.Profile_block}>\r\n     <ProfileInfo />\r\n     <MyPosts postsData={props.postsData}/>\r\n   </div>\r\n )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport styles from './Dialog.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n\r\n return (\r\n\r\n  <li className={styles.item} >\r\n   <NavLink to={'/messages/' + props.id}  className={styles.link} activeClassName={styles.active}> {props.name} </NavLink> \r\n  </li>\r\n  \r\n )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport Dialog from './Dialog/Dialog';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  \r\n  let namesElement = props.namesData.map(element => { return (<Dialog name={element.name} id={element.id} />) })\r\n\r\n return (\r\n   <div className={styles.block}>\r\n     <h3 className={styles.title}>Dialogs</h3>\r\n     <ul className={styles.list}>\r\n\r\n       {namesElement}\r\n\r\n     </ul>\r\n   </div>\r\n )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport styles from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n return (\r\n  <div className={styles.item}>\r\n   <div className={styles.avatar_block}>\r\n    <img src=\"https://www.blexar.com/avatar.png\" alt=\"avatar\" className={styles.avatar} />\r\n    <p className={styles.name}>{props.name}</p>\r\n   </div>\r\n   <div className={styles.text}>{props.text}</div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styles from './MessageBlock.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst MessageBlock = (props) => {\r\n\r\n\r\n\r\n let messagesElement = props.messagesData.map((element) => { return (<Message name={element.name} text={element.text} />) });\r\n return (\r\n  <div className={styles.message_block}>\r\n   <h3 className={styles.title}>Messages</h3>\r\n\r\n   {messagesElement};\r\n\r\n  </div>\r\n )\r\n}\r\n\r\nexport default MessageBlock;","import React from 'react';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport styles from './Messages.module.css';\r\nimport MessageBlock from './MessageBlock/MessageBlock';\r\n\r\nconst Messages = (props) => {\r\n return (\r\n   <div className={styles.block}>\r\n     <Dialogs namesData={props.namesData}/>\r\n     <MessageBlock messagesData={props.messagesData}/>\r\n   \r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Messages from './components/Messages/Messages';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\n\n\n\nconst App = (props) => {\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"app_wrapper\">\n        <Header/>\n        <Navbar />\n        <section className='app_wrapper__content'>\n        \n          <Route path=\"/profile/\" render={() => {return <Profile postsData={props.postsData} />}} />\n          <Route path=\"/messages/\" render={()=>{return  <Messages namesData={props.namesData} messagesData={props.messagesData} />}} />\n          \n        </section>\n      </div>\n    </BrowserRouter>\n  );\n\n}\n\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n  let postsData = [\n    { name: \"Jonny\", message: \"Hello! It's my first message.\", likes: '10' },\n    { name: \"Jonny\", message: \"I like React!\", likes: '666' }\n  ];\n\n  let namesData = [\n \n    { id: '1', name: 'Margarita' },\n    { id: '2', name: 'Tony' },\n    { id: '3', name: 'Maks' },\n    { id: '4', name: 'Dima' },\n    { id: '5', name: 'Vlad' },\n    { id: '6', name: 'Sid' }\n    \n  ];\n    \n  let messagesData = [\n    { name: 'Sid', text: \"Hi bro! How are you ?\" },\n    { name: 'Me', text: \"Hello dude! I'm fine. And you ?\" },\n    { name: 'Sid', text: \"Me too. Let's go to the gym?\" },\n    { name: 'Me', text: \"Ok, go!\" }\n    \n   ];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App postsData={postsData} namesData={namesData} messagesData={messagesData} />\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}